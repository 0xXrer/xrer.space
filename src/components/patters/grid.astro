---
interface Props {
    width?: string;
    height?: string;
    patternSize?: number;
    strokeWidth?: number;
    gridColor?: string;
    enableGradient?: boolean;
    gradientDirection?: "to-bottom" | "to-top";
    gradientSize?: number;
    class?: string;
}

const {
    width = "100%",
    height = "100%",
    patternSize = 12,
    strokeWidth = 0.5,
    gridColor = "currentColor",
    enableGradient = false,
    gradientDirection = "to-bottom",
    gradientSize = 50,
    class: className = "",
} = Astro.props;

const patternId = `gridPattern-${Math.random().toString(36).substr(2, 9)}`;
---

<svg
    width={width}
    height={height}
    class={className}
    xmlns="http://www.w3.org/2000/svg"
>
    <defs>
        <pattern
            id={patternId}
            patternUnits="userSpaceOnUse"
            width={patternSize}
            height={patternSize}
        >
            <!-- Horizontal line -->
            <line
                x1="0"
                y1="0"
                x2={patternSize}
                y2="0"
                stroke={gridColor}
                stroke-width={strokeWidth}></line>
            <!-- Vertical line -->
            <line
                x1="0"
                y1="0"
                x2="0"
                y2={patternSize}
                stroke={gridColor}
                stroke-width={strokeWidth}></line>
        </pattern>
        {
            enableGradient && (
                <>
                    <linearGradient
                        id={`gradient-${patternId}`}
                        x1="0%"
                        y1={gradientDirection === "to-bottom" ? "0%" : "100%"}
                        x2="0%"
                        y2={gradientDirection === "to-bottom" ? "100%" : "0%"}
                    >
                        <stop offset="0%" style="stop-color:white" />
                        <stop
                            offset={`${gradientSize}%`}
                            style="stop-color:black"
                        />
                        <stop offset="100%" style="stop-color:black" />
                    </linearGradient>
                    <mask id={`mask-${patternId}`}>
                        <rect
                            width="100%"
                            height="100%"
                            fill={`url(#gradient-${patternId})`}
                        />
                    </mask>
                </>
            )
        }
    </defs>
    <rect
        width="100%"
        height="100%"
        fill={`url(#${patternId})`}
        mask={enableGradient ? `url(#mask-${patternId})` : "none"}></rect>
</svg>
